"use strict";
function asyncGeneratorStep(e, r, t, n, a, o, c) {
    try {
        var s = e[o](c),
            i = s.value;
    } catch (e) {
        return void t(e);
    }
    s.done ? r(i) : Promise.resolve(i).then(n, a);
}
function _asyncToGenerator(s) {
    return function () {
        var e = this,
            c = arguments;
        return new Promise(function (r, t) {
            var n = s.apply(e, c);
            function a(e) {
                asyncGeneratorStep(n, r, t, a, o, "next", e);
            }
            function o(e) {
                asyncGeneratorStep(n, r, t, a, o, "throw", e);
            }
            a(void 0);
        });
    };
}
Object.defineProperty(exports, "__esModule", { value: !0 });
var path_1 = require("path"),
    fs_extra_1 = require("fs-extra"),
    install_1 = require("./install"),
    chalk_1 = require("chalk"),
    ora_1 = require("ora"),
    log_symbols_1 = require("log-symbols"),
    readAndMkdir = function s(i, u) {
        return new Promise(
            (function () {
                var t = _asyncToGenerator(
                    regeneratorRuntime.mark(function e(c, r) {
                        return regeneratorRuntime.wrap(
                            function (e) {
                                for (;;)
                                    switch ((e.prev = e.next)) {
                                        case 0:
                                            return (e.prev = 0), (e.next = 3), fs_extra_1.default.readdir(u);
                                        case 3:
                                            e.sent.map(
                                                (function () {
                                                    var r = _asyncToGenerator(
                                                        regeneratorRuntime.mark(function e(r) {
                                                            var t, n, a, o;
                                                            return regeneratorRuntime.wrap(
                                                                function (e) {
                                                                    for (;;)
                                                                        switch ((e.prev = e.next)) {
                                                                            case 0:
                                                                                return (
                                                                                    (e.prev = 0),
                                                                                    (t = path_1.default.join(u, r)),
                                                                                    (e.next = 4),
                                                                                    fs_extra_1.default.stat(t)
                                                                                );
                                                                            case 4:
                                                                                if (
                                                                                    ((n = e.sent),
                                                                                    (a = n.isFile()),
                                                                                    (n = n.isDirectory()),
                                                                                    !a)
                                                                                ) {
                                                                                    e.next = 15;
                                                                                    break;
                                                                                }
                                                                                if ("package.js" !== r)
                                                                                    return (
                                                                                        (e.next = 11),
                                                                                        fs_extra_1.default.readFile(t)
                                                                                    );
                                                                                e.next = 15;
                                                                                break;
                                                                            case 11:
                                                                                return (
                                                                                    (a = e.sent),
                                                                                    (e.next = 14),
                                                                                    fs_extra_1.default.writeFile(
                                                                                        path_1.default.join(i, r),
                                                                                        a,
                                                                                    )
                                                                                );
                                                                            case 14:
                                                                                c();
                                                                            case 15:
                                                                                if (n)
                                                                                    return (
                                                                                        (o = t.replace(u, "")),
                                                                                        (o = path_1.default.join(i, o)),
                                                                                        (e.next = 20),
                                                                                        fs_extra_1.default.mkdirp(o)
                                                                                    );
                                                                                e.next = 22;
                                                                                break;
                                                                            case 20:
                                                                                return (e.next = 22), s(o, t);
                                                                            case 22:
                                                                                e.next = 28;
                                                                                break;
                                                                            case 24:
                                                                                (e.prev = 24),
                                                                                    (e.t0 = e.catch(0)),
                                                                                    console.log(
                                                                                        log_symbols_1.default.error,
                                                                                        chalk_1.default.red(e.t0),
                                                                                    ),
                                                                                    process.exit();
                                                                            case 28:
                                                                            case "end":
                                                                                return e.stop();
                                                                        }
                                                                },
                                                                e,
                                                                null,
                                                                [[0, 24]],
                                                            );
                                                        }),
                                                    );
                                                    return function (e) {
                                                        return r.apply(this, arguments);
                                                    };
                                                })(),
                                            ),
                                                (e.next = 12);
                                            break;
                                        case 7:
                                            (e.prev = 7),
                                                (e.t0 = e.catch(0)),
                                                r(e.t0),
                                                console.log(log_symbols_1.default.error, chalk_1.default.red(e.t0)),
                                                process.exit();
                                        case 12:
                                        case "end":
                                            return e.stop();
                                    }
                            },
                            e,
                            null,
                            [[0, 7]],
                        );
                    }),
                );
                return function (e, r) {
                    return t.apply(this, arguments);
                };
            })(),
        );
    },
    create = (function () {
        var r = _asyncToGenerator(
            regeneratorRuntime.mark(function e(r) {
                var t, n, a, o, c, s;
                return regeneratorRuntime.wrap(
                    function (e) {
                        for (;;)
                            switch ((e.prev = e.next)) {
                                case 0:
                                    return (
                                        (t = ora_1.default("Installing packages").start()),
                                        (e.prev = 1),
                                        (n = path_1.default.join(process.cwd(), r.name)),
                                        (a = path_1.default.join(__dirname, "../template")),
                                        (e.next = 6),
                                        fs_extra_1.default.mkdirp(n)
                                    );
                                case 6:
                                    return (
                                        (s = require(path_1.default.join(__dirname, "../template/package"))(r.name)),
                                        (o = s.template),
                                        (c = s.dir),
                                        (s = s.name),
                                        (e.next = 9),
                                        fs_extra_1.default.writeFile(path_1.default.join(n, c, s), o.trim())
                                    );
                                case 9:
                                    return (e.next = 11), readAndMkdir(n, a);
                                case 11:
                                    return (
                                        t.succeed("Installing template dependencies"),
                                        (e.next = 14),
                                        install_1.default({ cwd: n, useYarn: r.useYarn })
                                    );
                                case 14:
                                    return (
                                        (e.next = 16),
                                        fs_extra_1.default.writeFile(
                                            path_1.default.join(n, ".gitignore"),
                                            "node_modules",
                                        )
                                    );
                                case 16:
                                    t.succeed("Create-rc-app init success"), process.exit(), (e.next = 25);
                                    break;
                                case 20:
                                    (e.prev = 20),
                                        (e.t0 = e.catch(1)),
                                        t.fail(),
                                        console.log(log_symbols_1.default.error, chalk_1.default.red(e.t0)),
                                        process.exit();
                                case 25:
                                case "end":
                                    return e.stop();
                            }
                    },
                    e,
                    null,
                    [[1, 20]],
                );
            }),
        );
        return function (e) {
            return r.apply(this, arguments);
        };
    })();
function asyncGeneratorStep(e, r, t, n, a, o, c) {
    try {
        var s = e[o](c),
            i = s.value;
    } catch (e) {
        return void t(e);
    }
    s.done ? r(i) : Promise.resolve(i).then(n, a);
}
function _asyncToGenerator(s) {
    return function () {
        var e = this,
            c = arguments;
        return new Promise(function (r, t) {
            var n = s.apply(e, c);
            function a(e) {
                asyncGeneratorStep(n, r, t, a, o, "next", e);
            }
            function o(e) {
                asyncGeneratorStep(n, r, t, a, o, "throw", e);
            }
            a(void 0);
        });
    };
}
(exports.default = create), Object.defineProperty(exports, "__esModule", { value: !0 });
var commander_1 = require("commander"),
    package_json_1 = require("../package.json"),
    init_1 = require("./init");
function _objectDestructuringEmpty(e) {
    if (null == e) throw new TypeError("Cannot destructure undefined");
}
function asyncGeneratorStep(e, r, t, n, a, o, c) {
    try {
        var s = e[o](c),
            i = s.value;
    } catch (e) {
        return void t(e);
    }
    s.done ? r(i) : Promise.resolve(i).then(n, a);
}
function _asyncToGenerator(s) {
    return function () {
        var e = this,
            c = arguments;
        return new Promise(function (r, t) {
            var n = s.apply(e, c);
            function a(e) {
                asyncGeneratorStep(n, r, t, a, o, "next", e);
            }
            function o(e) {
                asyncGeneratorStep(n, r, t, a, o, "throw", e);
            }
            a(void 0);
        });
    };
}
commander_1.program
    .version(package_json_1.default.version)
    .usage("[command] [name] [action]")
    .command("init")
    .option("-b --backend", "Create a background project")
    .option("-h --html5", "Create a html5 project")
    .option("-s --ssr", "Create a ssr project")
    .option("-c --component", "Create a component library")
    .option("-t --toolkit", "Create a toolkit library")
    .description("初始化项目文件")
    .action(
        (function () {
            var r = _asyncToGenerator(
                regeneratorRuntime.mark(function e(r) {
                    return regeneratorRuntime.wrap(function (e) {
                        for (;;)
                            switch ((e.prev = e.next)) {
                                case 0:
                                    return init_1.default(r), e.abrupt("return");
                                case 2:
                                case "end":
                                    return e.stop();
                            }
                    }, e);
                }),
            );
            return function (e) {
                return r.apply(this, arguments);
            };
        })(),
    ),
    commander_1.program.parse(process.argv),
    Object.defineProperty(exports, "__esModule", { value: !0 });
var _require = require("./utils"),
    checkAppNameExist = _require.checkAppNameExist,
    init = (function () {
        var r = _asyncToGenerator(
            regeneratorRuntime.mark(function e(r) {
                return regeneratorRuntime.wrap(function (e) {
                    for (;;)
                        switch ((e.prev = e.next)) {
                            case 0:
                                return (
                                    _objectDestructuringEmpty(r),
                                    console.log("before check"),
                                    (e.next = 4),
                                    checkAppNameExist()
                                );
                            case 4:
                                console.log("check");
                            case 5:
                            case "end":
                                return e.stop();
                        }
                }, e);
            }),
        );
        return function (e) {
            return r.apply(this, arguments);
        };
    })();
(exports.default = init), Object.defineProperty(exports, "__esModule", { value: !0 });
var cross_spawn_1 = require("cross-spawn"),
    install = function (o) {
        var c = o.cwd || process.cwd();
        return new Promise(function (r, t) {
            var n = o.useYarn ? "yarn" : "npm",
                a = ["install"],
                e = cross_spawn_1.default(n, a, { cwd: c, stdio: ["pipe", process.stdout, process.stderr] });
            e.once("close", function (e) {
                0 === e ? r() : t({ command: "".concat(n, " ").concat(a.join(" ")) });
            }),
                e.once("error", t);
        });
    };
function _toConsumableArray(e) {
    return _arrayWithoutHoles(e) || _iterableToArray(e) || _unsupportedIterableToArray(e) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError(
        "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.",
    );
}
function _unsupportedIterableToArray(e, r) {
    if (e) {
        if ("string" == typeof e) return _arrayLikeToArray(e, r);
        var t = Object.prototype.toString.call(e).slice(8, -1);
        return (
            "Object" === t && e.constructor && (t = e.constructor.name),
            "Map" === t || "Set" === t
                ? Array.from(e)
                : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)
                ? _arrayLikeToArray(e, r)
                : void 0
        );
    }
}
function _iterableToArray(e) {
    if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
}
function _arrayWithoutHoles(e) {
    if (Array.isArray(e)) return _arrayLikeToArray(e);
}
function _arrayLikeToArray(e, r) {
    (null == r || r > e.length) && (r = e.length);
    for (var t = 0, n = new Array(r); t < r; t++) n[t] = e[t];
    return n;
}
(exports.default = install),
    Object.defineProperty(exports, "__esModule", { value: !0 }),
    (exports.checkAppNameExist = exports.checkAppName = exports.checkNodeVersion = exports.checkYarn = void 0);
var execSync = require("child_process").execSync,
    fse = require("fs-extra"),
    chalk = require("chalk"),
    logSymbols = require("log-symbols"),
    validateProjectName = require("validate-npm-package-name"),
    semver = require("semver"),
    checkYarn = function () {
        try {
            return execSync("yarnpkg --version", { stdio: "ignore" }), !0;
        } catch (e) {
            return !1;
        }
    };
exports.checkYarn = checkYarn;
var checkNodeVersion = function () {
    semver.satisfies(process.versions.node, ">=10") ||
        console.warn(
            logSymbols.warning,
            chalk.yellow(
                "Current NODE is".concat(
                    chalk.green('"'.concat(process.versions.node, '"')),
                    ", shu shu wo a jian yi ni sheng ji dao 10 yi shang\n",
                ),
            ),
        );
};
exports.checkNodeVersion = checkNodeVersion;
var checkAppName = function (e) {
    var r = validateProjectName(e);
    r.validForNewPackages ||
        (console.error(
            logSymbols.error,
            chalk.red(
                "Cannot create a project named ".concat(
                    chalk.green('"'.concat(e, '"')),
                    " because of npm naming restrictions:\n",
                ),
            ),
        ),
        [].concat(_toConsumableArray(r.errors || []), _toConsumableArray(r.warnings || [])).map(function (e) {
            console.error(logSymbols.error, chalk.red("（｀へ´）  ".concat(e)));
        }),
        console.error(logSymbols.error, chalk.red("\nPlease choose a different project name")),
        process.exit(1));
};
exports.checkAppName = checkAppName;
checkAppNameExist = function (e) {
    return fse.ensureDirSync(e);
};
exports.checkAppNameExist = checkAppNameExist;
